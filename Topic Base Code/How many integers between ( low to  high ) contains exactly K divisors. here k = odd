/***   Bismillahir Rahmanir Rahim   ***/

#include<bits/stdc++.h>
using namespace std;

#define  nn '\n'
using ll =  long long;

const ll M = 1e10;
const int N = 1e5 + 9;

int spf[N];
vector<ll>v[N];

void pre_cal(){
    for(int i = 1; i < N; i++){
        spf[i] = i;
    }

    for(int i = 2; i < N; i++){
        for(int j = i; j < N; j += i)
        {
            spf[j] = min(i, spf[j]);
        }
    }

    for(int i = 1; i < N; i++){
        int n = i;
        int divisor = 1;
        while(n > 1){
            int cnt = 0, p = spf[n];
            while(n % p == 0){
                cnt++;
                n /= p;
            }
            divisor *= (2 * cnt + 1);
        }
        v[divisor].push_back(1LL * i * i);
    }
}
void solution(){
   int k;
   ll l, r; 
   cin >> k >> l >> r; 

   int ans = 0;
   ans = upper_bound(v[k].begin(), v[k].end(), r) - lower_bound(v[k].begin(), v[k].end(), l);
   cout << ans << nn;
}

int32_t main(){
   
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);cout.tie(nullptr);

    pre_cal();

    int t = 1, c = 1;
    cin >> t;
    //cin.ignore();
    while(t--){
        //cout << "Case " << c++ << ": ";
        solution();
    }
    return 0;
}
